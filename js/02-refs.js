/**
 * Передача за посиланням і за значенням
 *
 * Примітиви і складні типи
 * Посилальна рівність (referential equality)
 */

// масиви - це складні дані (структури даних), на відміну від примітивів вони зберігаються не за значенням, а за посиланням на комірку памʼяті

// let c = 5;
// let d = c
// c = 10
// console.log(c); // 10
// console.log(d); // 5

const a = [1, 2, 3];
// const b = a; //! копія масиву так не робиться!! це не копія, ви зберегли в конст б посилання на тей самий масив, який зберігається в а, а треба було створити новий, у якому просто будуть ті ж самі дані
const b = a.slice(0);
// .slice(0) - поверне новий масив, у якому буде копія масиву a починаючи з індексу 0, тобто повна копія масиву a

console.log("a", a);
console.log("b", b);

a[0] = 500;
b[2] = 300;

console.log("a", a);
console.log("b", b);

// ми можемо зробити висновок що конс а і конст b це посилання на один і той самий масив. Чому? Тому що міняючи перший - другий змінюється теж

console.log(a === b); // true - тому що це дійсно один і той самий масив

// console.log([] === []); // false
// console.log([1, 2, 3] === [1, 2, 3]); //  false
